apiVersion: gkehub.cnrm.cloud.google.com/v1beta1
kind: GKEHubMembership
metadata:
  labels:
    label-one: value-one
  name: ${CLUSTER_NAME}-hub
  namespace: ${RESOURCE_NAMESPACE}
  annotations:
    cnrm.cloud.google.com/project-id: ${PROJECT_ID}  
spec:
  location: global
  description: GKE QA
  endpoint:
    gkeCluster:
      resourceRef:
        name: ${CLUSTER_NAME}
---
apiVersion: container.cnrm.cloud.google.com/v1beta1
kind: ContainerCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${RESOURCE_NAMESPACE}
spec:
  location: ${LOCATION}
  initialNodeCount: 1
  workloadIdentityConfig:
    # Workload Identity supports only a single namespace based on your project name.
    # Replace ${PROJECT_ID?} below with your project ID.
    identityNamespace: ${PROJECT_ID}.svc.id.goog
  ipAllocationPolicy:
    clusterIpv4CidrBlock: 10.96.0.0/14
  privateClusterConfig:
    enablePrivateEndpoint: false
    enablePrivateNodes: true
    masterIpv4CidrBlock: 172.16.0.0/28
  networkingMode: VPC_NATIVE
  networkRef:
    name: ${CLUSTER_NAME}-net
  subnetworkRef:
    name: ${CLUSTER_NAME}-subnet
  masterAuthorizedNetworksConfig:
    cidrBlocks:
    - cidrBlock: 0.0.0.0/0 # Change to your trusted network CIDR
      displayName: trusted-net
  enableBinaryAuthorization: true
  enableIntranodeVisibility: true
  enableShieldedNodes: true
  addonsConfig:
    networkPolicyConfig:
      disabled: false
    dnsCacheConfig:
      enabled: true
    configConnectorConfig:
      enabled: false
  networkPolicy:
    enabled: true
  podSecurityPolicyConfig:
    enabled: false
  verticalPodAutoscaling:
    enabled: true 
---
apiVersion: container.cnrm.cloud.google.com/v1beta1
kind: ContainerNodePool
metadata:
  labels:
    cluster: ${CLUSTER_NAME}
  name: ${CLUSTER_NAME}-worker-pool-1
  namespace: ${RESOURCE_NAMESPACE}
spec:
  location: ${LOCATION}
  initialNodeCount: 2
  autoscaling:
    minNodeCount: 1
    maxNodeCount: 3
  nodeConfig:
    imageType: COS_CONTAINERD
    machineType: e2-standard-4
    diskSizeGb: 100
    diskType: pd-standard 
    tags:
      - kcc
      - dev
    preemptible: false
    oauthScopes:
      - "https://www.googleapis.com/auth/logging.write"
      - "https://www.googleapis.com/auth/monitoring"
    metadata:
      disable-legacy-endpoints: "true"
  management:
    autoRepair: true
    autoUpgrade: true
  clusterRef:
    name: ${CLUSTER_NAME}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: ${CLUSTER_NAME}-net
  namespace: ${RESOURCE_NAMESPACE}
spec:
  routingMode: REGIONAL
  autoCreateSubnetworks: false
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: ${CLUSTER_NAME}-subnet
  namespace: ${RESOURCE_NAMESPACE}
spec:
  ipCidrRange: 10.2.0.0/16
  region: ${LOCATION}
  networkRef:
    name: ${CLUSTER_NAME}-net
  secondaryIpRange:
  - rangeName: servicesrange
    ipCidrRange: 10.3.0.0/16
  - rangeName: clusterrange
    ipCidrRange: 10.4.0.0/16
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata:
  name: ${CLUSTER_NAME}-computerouternat-dep-forallsubnets
  namespace: ${RESOURCE_NAMESPACE}
spec:
  description: example router description
  region: ${LOCATION}
  networkRef:
    name: ${CLUSTER_NAME}-net
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata:
  name: ${CLUSTER_NAME}-computerouternat-sample-forallsubnets
  namespace: ${RESOURCE_NAMESPACE}
spec:
  region: ${LOCATION}
  routerRef:
    name: ${CLUSTER_NAME}-computerouternat-dep-forallsubnets
  natIpAllocateOption: AUTO_ONLY
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
---
apiVersion: gkehub.cnrm.cloud.google.com/v1beta1
kind: GKEHubFeatureMembership
metadata:
  name: gkehub-${CLUSTER_NAME}
  namespace: ${RESOURCE_NAMESPACE} 
spec:
  projectRef:
    external: ${PROJECT_ID}
  location: global
  membershipRef:
    name: gke-${CLUSTER_NAME}
  featureRef:
    name: gkehubfeature-acm
  configmanagement:
    version: 1.8.1
    configSync:
      sourceFormat: hierarchy
      git:
        syncRepo: ${GIT_REPO}"
        syncBranch: ${REPO_BRANCH}
        policyDir: ""
        syncWaitSecs: "20"
        syncRev: "HEAD"
        secretType: "none"
    policyController:
      enabled: true
      exemptableNamespaces:
        - "config-management-system"
      referentialRulesEnabled: true
      logDeniesEnabled: true
      templateLibraryInstalled: true
      auditIntervalSeconds: "20"
    binauthz:
      enabled: true
---
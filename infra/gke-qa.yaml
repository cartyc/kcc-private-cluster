apiVersion: container.cnrm.cloud.google.com/v1beta1
kind: ContainerCluster
metadata: # kpt-merge: ${NAMESPACE}/${CLUSTER_NAME}
  name: cluster-2 # kpt-set: ${cluster-name-2}
  namespace: namespace # kpt-set: ${namespace}
  labels:
    availability: medium
    target-audience: production
  annotations:
    cnrm.cloud.google.com/remove-default-node-pool: "false"
spec:
  addonsConfig:
    configConnectorConfig:
      enabled: false
    dnsCacheConfig:
      enabled: true
    networkPolicyConfig:
      disabled: false
  description: description-1 # kpt-set: ${cluster-description-2}
  enableBinaryAuthorization: true
  enableIntranodeVisibility: true
  enableShieldedNodes: true
  initialNodeCount: 1
  ipAllocationPolicy:
    clusterSecondaryRangeName: clusterrange
    servicesSecondaryRangeName: servicesrange
  location: zone # kpt-set: ${zone}
  maintenancePolicy:
    dailyMaintenanceWindow:
      startTime: 01:00
  masterAuthorizedNetworksConfig:
    cidrBlocks:
      - cidrBlock: auth-net # kpt-set: ${auth-network}
        displayName: private-net
  networkPolicy:
    enabled: true
  networkRef:
    name: cluster-2-net # kpt-set: ${cluster-name-2}-net
  networkingMode: VPC_NATIVE
  notificationConfig:
    pubsub:
      enabled: true
      topicRef:
        name: cluster-2-pubsub # kpt-set: ${cluster-name-2}-pubsub
  podSecurityPolicyConfig:
    enabled: false
  privateClusterConfig:
    enablePrivateEndpoint: false
    enablePrivateNodes: true
    masterIpv4CidrBlock: 172.16.0.0/28
  subnetworkRef:
    name: cluster-2-subnet # kpt-set: ${cluster-name-2}-subnet
  verticalPodAutoscaling:
    enabled: true
  workloadIdentityConfig:
    # Workload Identity supports only a single namespace based on your project name.
    # Replace ${PROJECT_ID?} below with your project ID.
    identityNamespace: project.svc.id.goog # kpt-set: ${project-id}.svc.id.goog
---
apiVersion: container.cnrm.cloud.google.com/v1beta1
kind: ContainerNodePool
metadata: # kpt-merge: ${NAMESPACE}/${CLUSTER_NAME}-worker-pool-1
  name: cluster-2-worker-pool-1 # kpt-set: ${cluster-name-2}-worker-pool-1
  namespace: namespace # kpt-set: ${namespace}
  labels:
    cluster: cluster-2 # kpt-set: ${cluster-name-2}
spec:
  autoscaling:
    maxNodeCount: 3
    minNodeCount: 1
  clusterRef:
    name: cluster-2 # kpt-set: ${cluster-name-2}
  initialNodeCount: 2
  location: zone # kpt-set: ${zone}
  management:
    autoRepair: true
    autoUpgrade: true
  nodeConfig:
    metadata:
      disable-legacy-endpoints: "true"
    diskSizeGb: 100
    diskType: pd-standard
    imageType: COS_CONTAINERD
    machineType: e2-standard-4
    oauthScopes:
      - "https://www.googleapis.com/auth/logging.write"
      - "https://www.googleapis.com/auth/monitoring"
    preemptible: false
    tags: # kpt-set: ${tags-2}
      - zonal
      - demo
---
apiVersion: pubsub.cnrm.cloud.google.com/v1beta1
kind: PubSubTopic
metadata: # kpt-merge: ${NAMESPACE}/${CLUSTER_NAME}-pubsub
  name: cluster-2-pubsub # kpt-set: ${cluster-name-2}-pubsub
  namespace: namespace # kpt-set: ${namespace}
---
apiVersion: gkehub.cnrm.cloud.google.com/v1beta1
kind: GKEHubMembership
metadata: # kpt-merge: ${NAMESPACE}/${CLUSTER_NAME}-cluster
  name: cluster-2-hub # kpt-set: ${cluster-name-2}-hub
  namespace: namespace # kpt-set: ${namespace}
  labels:
    label-one: value-one
  annotations:
    cnrm.cloud.google.com/project-id: "project" # kpt-set: ${project-id}
spec:
  description: cluster-2 # kpt-set: ${cluster-name-2}
  endpoint:
    gkeCluster:
      resourceRef:
        external: https://container.googleapis.com/v1/projects/project/locations/zone/clusters/cluster-2 # kpt-set: https://container.googleapis.com/v1/projects/${project-id}/locations/${zone}/clusters/${cluster-name-2}
  location: global
---
apiVersion: gkehub.cnrm.cloud.google.com/v1beta1
kind: GKEHubFeatureMembership
metadata: # kpt-merge: ${NAMESPACE}/gkehub-${CLUSTER_NAME}
  name: gkehub-cluster-2 # kpt-set: gkehub-${cluster-name-2}
  namespace: namespace # kpt-set: ${namespace}
spec:
  configmanagement:
    binauthz:
      enabled: true
    configSync:
      git:
        policyDir: ""
        secretType: "none"
        syncBranch: branch # kpt-set: ${branch}
        syncRepo: repo # kpt-set: ${repo}
        syncRev: "HEAD"
        syncWaitSecs: "20"
      sourceFormat: hierarchy
    policyController:
      auditIntervalSeconds: "20"
      enabled: true
      exemptableNamespaces:
        - "config-management-system"
      logDeniesEnabled: true
      referentialRulesEnabled: true
      templateLibraryInstalled: true
    version: 1.8.1
  featureRef:
    name: gkehubfeature-acm
  location: global
  membershipRef:
    name: cluster-2-hub # kpt-set: ${cluster-name-2}-hub
  projectRef:
    external: project # kpt-set: ${project-id}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata: # kpt-merge: ${NAMESPACE}/${CLUSTER_NAME}-net
  name: cluster-2-net # kpt-set: ${cluster-name-2}-net
  namespace: namespace # kpt-set: ${namespace}
spec:
  autoCreateSubnetworks: false
  routingMode: REGIONAL
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata: # kpt-merge: ${NAMESPACE}/${CLUSTER_NAME}-subnet
  name: cluster-2-subnet # kpt-set: ${cluster-name-2}-subnet
  namespace: namespace # kpt-set: ${namespace}
spec:
  ipCidrRange: 10.2.0.0/16
  networkRef:
    name: cluster-2-net # kpt-set: ${cluster-name-2}-net
  region: region # kpt-set: ${region}
  secondaryIpRange:
    - ipCidrRange: 10.3.0.0/16
      rangeName: servicesrange
    - ipCidrRange: 10.4.0.0/16
      rangeName: clusterrange
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata: # kpt-merge: ${NAMESPACE}/computerouternat-dep-forallsubnets
  name: router-cluster-1-net # kpt-set: router-${cluster-name-2}-net
  namespace: namespace # kpt-set: ${namespace}
spec:
  description: example router description
  networkRef:
    name: cluster-2-net # kpt-set: ${cluster-name-2}-net
  region: region # kpt-set: ${region}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata: # kpt-merge: ${NAMESPACE}/computerouternat-sample-forallsubnets
  name: nat-cluster-1-net # kpt-set: nat-${cluster-name-2}-net
  namespace: namespace # kpt-set: ${namespace}
spec:
  natIpAllocateOption: AUTO_ONLY
  region: region # kpt-set: ${region}
  routerRef:
    name: router-cluster-1-net # kpt-set: router-${cluster-name-2}-net
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
